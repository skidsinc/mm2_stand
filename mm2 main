print("it executed forral v1")


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

local hosts = {LocalPlayer.UserId, 2977240591}
local whitelist = {}
local prefix = "."

getgenv().loop_fling = false
 
getgenv().forced_stop = false

local function r15(plr)
	if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
		return true
	end
end

local function tweento(targetCFrame)
	local player = LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	local currentCFrame = hrp.CFrame
	local distance = (currentCFrame.Position - targetCFrame.Position).Magnitude
	local speed = 50

	local tweenInfo = TweenInfo.new(
		0.3,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local goal = {
		CFrame = targetCFrame
	}

	local tween = TweenService:Create(hrp, tweenInfo, goal)
	tween:Play()
end

local function send_msg(msg)
    game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(msg)
end

local function GetPlayer(input)
	local found = {}
	local totalFound = 0
	local strl = input:lower()
	local players = game.Players:GetPlayers()
	local localPlayer = game.Players.LocalPlayer

	if strl == "random" then
		local totalPlayers = #players
		local randomized = math.random(1, totalPlayers)
		for i, v in ipairs(players) do
			if i == randomized then
				if v ~= localPlayer then
					table.insert(found, v.Name)
				else
					randomized = randomized + 1
					if players[randomized] and players[randomized] ~= localPlayer then
						table.insert(found, players[randomized].Name)
					end
				end
				break
			end
		end
	elseif strl == "me" then
		table.insert(found, localPlayer.Name)

	else
		for _, v in ipairs(players) do
			if totalFound == 0 and (
				v.Name:lower():sub(1, #input) == input:lower() or
				v.DisplayName:lower():sub(1, #input) == input:lower()
			) then
				table.insert(found, v.Name)
				totalFound = 1
			end
		end
	end

	return found
end


local function cmd_whitelist(arg)
  local target = GetPlayer(arg)[1]
  local target_id = Players:FindFirstChild(target).UserId
  if not table.find(whitelist, target_id) then
    table.insert(whitelist, target_id)
    send_msg("Whitelisted: "..target)
  end
end

local function cmd_unwhitelist(arg)
  local target = GetPlayer(arg)[1]
  local target_id = Players:FindFirstChild(target).UserId
  if table.find(whitelist, target_id) then
    for i, v in ipairs(whitelist) do
      if v == target_id then
        table.remove(whitelist, i)
        break
      end
    end
    send_msg("Unwhitelisted: "..target)
  end
end

local function cmd_loopfling(arg)
  print("lfling start")
  local target = GetPlayer(arg)[1]
  if getgenv().flinging == true then
    getgenv().flinging = false
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_fling * CFrame.new(0,2,0)
    task.wait(0.4)
  end
  task.wait(0.1)
  if target and target ~= LocalPlayer.Name then
    getgenv().loop_fling = true
    twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame)
    task.wait(0.4)
    wa = 0
    spawn(function()
      repeat game:GetService("RunService").Heartbeat:Wait()
        wa += 1
        if wa == 2 then
          spawn(function()
            t_vel = game.Players[target].Character.Humanoid.MoveDirection
            c_x = (t_vel.X*math.random(5,11)) + math.random(-2,2)
            c_z = (t_vel.Z*math.random(5,11)) + math.random(-2,2)
            LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame + Vector3.new(c_x, math.random(-1,1), c_z )
          end)
          wa = 0
        end
      until getgenv().loop_fling == false or (not game.Players:FindFirstChild(target))
      LocalPlayer.Character.Humanoid.Health = 0
    end)
  end
end


local function cmd_who(arg)
  local murder = "MURDERER NOT FOUND"
  local sheriff = "SHERRIF NOT FOUND"

  for _, p in pairs(game.Players:GetPlayers()) do
    local items = p.Backpack
    local character = p.Character
    if (items and items:FindFirstChild("Knife")) or (character and character:FindFirstChild("Knife")) then
      murder = p
    elseif (items and items:FindFirstChild("Gun")) or (character and character:FindFirstChild("Gun")) then
      sheriff = p
    end
  end
  
  local normalZone = workspace:FindFirstChild("Normal")
  local gunDropped = false
  if normalZone then
    local gun = normalZone:FindFirstChild("GunDrop")
    if gun and gunDropped == false then
      gunDropped = true
    end
  end
  
  if arg == "murder" or arg == "murderer" then
    send_msg("The murderer is: "..murder.Name)
  elseif arg == "sherrif" then
    if gunDropped == false then
      send_msg("The sherrif is: "..sheriff.Name)
    else
      send_msg("The gun is currently dropped")
    end
  else
    send_msg("The murderer is: "..murder.Name)
    task.wait(0.2)
    if gunDropped == false then
      send_msg("The sherrif is: "..sheriff.Name)
    else
      send_msg("The gun is currently dropped")
    end
  end
end


local function cmd_fling(arg)
  local target = GetPlayer(arg)[1]
  if getgenv().flinging == true then
    getgenv().flinging = false
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_fling * CFrame.new(0,2,0)
    task.wait(0.4)
  end
  task.wait(0.1)
  if target and target ~= LocalPlayer.Name then
    getgenv().flinging = true
    getgenv().before_fling = LocalPlayer.Character.HumanoidRootPart.CFrame
    twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame)
    task.wait(0.2)
    wa = 0
    spawn(function()
      repeat game:GetService("RunService").Heartbeat:Wait()
        wa += 1
        if wa == 2 then
          spawn(function()
            t_vel = game.Players[target].Character.Humanoid.MoveDirection
            c_x = (t_vel.X*math.random(5,11))
            c_z = (t_vel.Z*math.random(5,11))
            LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame + Vector3.new(c_x, math.random(-2,2), c_z )
          end)
          wa = 0
        end
      until getgenv().flinging == false or (not game.Players:FindFirstChild(target))
    end)
    task.wait(3)
    getgenv().flinging = false
    for i = 1,5 do
      task.wait(0.05)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame =getgenv().before_fling
    end
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    task.wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_fling * CFrame.new(0,2,0)
  end
end

local function cmd_prefix(arg)
  if arg ~= "" then
    prefix = arg
    send_msg("Prefix changed to: "..prefix)
  end
end

local function cmd_gun(arg)
  local target = arg
  if target then
    local normalZone = workspace:FindFirstChild("Normal")
    local gunDropped = false
    local gunpos = ""
    if normalZone then
      local gun = normalZone:FindFirstChild("GunDrop")
      if gun == false then
        gunDropped = true
        gunpos = gun.Position
      end
    end
    if gunDropped == false then
      send_msg("The gun isnt dropped")
    else 
      for i = 1,5 do 
        twen = tweento(CFrame.new(gunpos.X, gunpos.Y, gunpos.Z))
      end
      
      if LocalPlayer.Backpack:FindFirstChild("Gun") or LocalPlayer.Character:FindFirstChild("Gun") then
        send_msg("Picked up gun...")
        for i = 1,3 do 
          tweento(game.Players[target].Character.HumanoidRootPart.CFrame)
        end
        LocalPlayer.Character.Humanoid.Health = 0
      else 
        send_msg("Unable to pick up the gun")
      end
    end
    
  end
end


local function main_cmds(msg, id)
  getgenv().forced_stop = false
  local msg = string.lower(msg)
  local cmd = string.split(msg," ")
  local host = game.Players:GetPlayerByUserId(id)
  if cmd[1] and cmd[1]:sub(1, #prefix) == prefix then
    cmd[1] = cmd[1]:sub(#prefix + 1)
  	if cmd[2] == "me" then
  		cmd[2] = host.Name
  	end
  	if cmd[1] == "prefix" and cmd[2] then
  	  cmd_prefix(cmd[2])
  	  
  	elseif (cmd[1] == "whitelist" or cmd[1] == "wl") and cmd[2] then
  	  if table.find(hosts, host.UserId) then
  	    cmd_whitelist(cmd[2])
  	  else
  	    send_msg("Unable to whitelist that user - invalid permissons.")
  	  end
  	elseif (cmd[1] == "unwhitelist" or cmd[1] == "unwl") and cmd[2] then
  	  if table.find(hosts, host.UserId) then
  	    cmd_unwhitelist(cmd[2])
  	  else
  	    send_msg("Unable to whitelist that user - invalid permissons.")
  	  end
  	  
  	elseif cmd[1] == "bring" then
  	  LocalPlayer.Character.HumanoidRootPart.CFrame = host.Character.HumanoidRootPart.CFrame
  	  
  	elseif cmd[1] == "fling" and cmd[2] then
  	  if getgenv().loop_fling == false then
	      cmd_fling(cmd[2])
	    end
	    
	  elseif cmd[1] == "who" or cmd[1] == "roles" then
	    cmd_who(cmd[2])
	    
	  elseif cmd[1] == "gun" then
	    cmd_gun(host)
	    
	  elseif cmd[1] == "jerk" then
	    getgenv().jerking = true
	   local track
      while task.wait() and getgenv().jerking == true do
        if getgenv().jerking == true
      
          local isR15 = r15(LocalPlayer)
          if not track then
            local anim = Instance.new("Animation")
            anim.AnimationId = not isR15 and "rbxassetid://72042024" or "rbxassetid://698251653"
            track = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
          end
        
          track:Play()
          track:AdjustSpeed(isR15 and 0.7 or 0.65)
          track.TimePosition = 0.6
          task.wait(0.1)
          while track and track.TimePosition < (not isR15 and 0.65 or 0.7) do task.wait(0.1) end
          if track then
            track:Stop()
            track = nil
          end
        end
      end
	  elseif cmd[1] == "unjerk" or cmd[1] == "normal" then
	    getgenv().jerking = false
	    
	  elseif cmd[1] == "re" or cmd[1] == "reset" or cmd[1] == "fix" then
	    getgenv().loop_fling = false
	    getgenv().flinging = false
	    LocalPlayer.Character.Humanoid.Health = 0
	    
	    getgenv().before_fling = host.Character.HumanoidRootPart.CFrame
	    
	  elseif (cmd[1] == "loopfling" or cmd[1] == "lfling") and cmd[2] then
	    cmd_loopfling(cmd[2])
	    
	    
	  elseif (cmd[1] == "unloopfling" or cmd[1] == "unlfling" or cmd[1] == "stop") then
	    getgenv().loop_fling = false
	    
	    
  	end
  end
end




local function handle_msg(plr, msg)
  if plr then
    local id = plr.UserId
    if table.find(whitelist, id) or table.find(hosts, id) then
      print("running cmd")
      main_cmds(msg, id)
    end
  end
end

for _, player in pairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
      handle_msg(player, message)
    end)
end

game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        handle_msg(player, message)
    end)
end)


print("starting loops")


spawn(function()
	pcall(function()
		workspace.FallenPartsDestroyHeight = 0/1/0
		repeat
			wait()
			sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge*math.huge,math.huge)
		until game.Players.LocalPlayer == nil
	end)
end)



game:GetService("RunService").Heartbeat:Connect(function()
  if getgenv().loop_fling == true or getgenv().flinging == true then
    
    
    local character = LocalPlayer.Character
    if character then
      
      
      local root = character:WaitForChild("HumanoidRootPart")
      local vel, movel = nil, 0.1
    
      vel = root.Velocity
      root.Velocity = Vector3.new(math.random(-20000,20000) 50000, -20000)
      
    
      game:GetService("RunService").RenderStepped:Wait()
      if character and character.Parent and root and root.Parent then
          root.Velocity = vel
      end
    
      game:GetService("RunService").Stepped:Wait()
      if character and character.Parent and root and root.Parent then
        root.Velocity = vel + Vector3.new(0, movel, 0)
        movel = movel * -1
      end
    end
  end
end)
