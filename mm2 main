print("it executed forral v4")


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

getgenv().in_game = false
getgenv().can_auto = true

ReplicatedStorage.Remotes.Gameplay.RoleSelect.OnClientEvent:Connect(function(role, ...)
  print("loaded")
	getgenv().in_game = true
	if getgenv().loop_fling == false and getgenv().bending == false and getgenv().flinging == false and getgenv().banging == false and getgenv().in_game == true and getgenv().can_auto == true then
	  task.wait(0.1)
	  LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(133, math.random(140,144), math.random(58,60))
	end
end)
LocalPlayer.CharacterAdded:Connect(function(char)
  print("died")
  getgenv().in_game = false
  getgenv().spelling = false
end)

--game.Workspace.Gravity = 0

local hosts = {LocalPlayer.UserId, 2977240591}
local whitelist = {5174948497, 1175765113, 4248548793}
local prefix = "."

getgenv().loop_fling = false
getgenv().flinging = false
getgenv().banging = false
getgenv().bending = false
getgenv().up_boost = false
getgenv().down_boost = false
getgenv().mounting = false
getgenv().floating = false
getgenv().platforming = false
 
getgenv().forced_stop = false

getgenv().render_graphic = true
getgenv().gun = false

local function r15(plr)
	if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
		return true
	end
end


local function notify(head, desc)
  spawn(function()
    game:GetService("StarterGui"):SetCore("SendNotification", {
      Title = head,
      Text = desc,
      Time = 12
    })
  end)
end
notify("mm2", "loading")


local function tweento(targetCFrame)
	local player = LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local currentCFrame = hrp.CFrame
	local distance = (currentCFrame.Position - targetCFrame.Position).Magnitude
	local speed = 50
	local tweenInfo = TweenInfo.new(
		0.3,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)
	local goal = {
		CFrame = targetCFrame
	}
	local tween = TweenService:Create(hrp, tweenInfo, goal)
	tween:Play()
end

local function tweento_slow(targetCFrame)
	local player = LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local currentCFrame = hrp.CFrame
	local distance = (currentCFrame.Position - targetCFrame.Position).Magnitude
	local speed = 50
	local tweenInfo = TweenInfo.new(
		0.9,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)
	local goal = {
		CFrame = targetCFrame
	}
	local tween = TweenService:Create(hrp, tweenInfo, goal)
	tween:Play()
end


local function send_msg(msg)
    game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(msg)
end


local function GetPlayer(input)
	local found = {}
	local totalFound = 0
	local strl = input:lower()
	local players = game.Players:GetPlayers()
	local localPlayer = game.Players.LocalPlayer

	if strl == "random" then
		local totalPlayers = #players
		local randomized = math.random(1, totalPlayers)
		for i, v in ipairs(players) do
			if i == randomized then
				if v ~= localPlayer then
					table.insert(found, v.Name)
				else
					randomized = randomized + 1
					if players[randomized] and players[randomized] ~= localPlayer then
						table.insert(found, players[randomized].Name)
					end
				end
				break
			end
		end
	elseif strl == "murder" or strl == "murderer" then
	  local murder = "na"
  
    for _, p in pairs(game.Players:GetPlayers()) do
      local items = p.Backpack
      local character = p.Character
      if (items and items:FindFirstChild("Knife")) or (character and character:FindFirstChild("Knife")) then
        murder = p.Name
      end
    end
    
    if murder ~= "na" then
      table.insert(found, murder)
    end
		
	elseif strl == "sherrif" then
    local sheriff = "na"
  
    for _, p in pairs(game.Players:GetPlayers()) do
      local items = p.Backpack
      local character = p.Character
      if (items and items:FindFirstChild("Gun")) or (character and character:FindFirstChild("Gun")) then
        sheriff = p.Name
      end
    end
    
    if sheriff ~= "na" then
      table.insert(found, sheriff)
    end
    
	else
		for _, v in ipairs(players) do
			if totalFound == 0 and (
				v.Name:lower():sub(1, #input) == input:lower() or
				v.DisplayName:lower():sub(1, #input) == input:lower()
			) then
				table.insert(found, v.Name)
				totalFound = 1
			end
		end
	end

	return found
end


local function cmd_whitelist(arg)
  local target = GetPlayer(arg)[1]
  local target_id = Players:FindFirstChild(target).UserId
  if not table.find(whitelist, target_id) then
    table.insert(whitelist, target_id)
    send_msg("Whitelisted: "..target)
  end
end


local function cmd_unwhitelist(arg)
  local target = GetPlayer(arg)[1]
  local target_id = Players:FindFirstChild(target).UserId
  if table.find(whitelist, target_id) then
    for i, v in ipairs(whitelist) do
      if v == target_id then
        table.remove(whitelist, i)
        break
      end
    end
    send_msg("Unwhitelisted: "..target)
  end
end



local function cmd_who(arg)
  local murder = "MURDERER NOT FOUND"
  local sheriff = "SHERRIF NOT FOUND"

  for _, p in pairs(game.Players:GetPlayers()) do
    local items = p.Backpack
    local character = p.Character
    if (items and items:FindFirstChild("Knife")) or (character and character:FindFirstChild("Knife")) then
      murder = p.Name
    elseif (items and items:FindFirstChild("Gun")) or (character and character:FindFirstChild("Gun")) then
      sheriff = p.Name
    end
  end
  
  local gunDropped = false
  local gunpos = ""
  for i,v in pairs(game.workspace:GetChildren()) do
    for j,k in pairs(v:GetChildren()) do
      if k.Name == "GunDrop" then
          gunDropped = true
          gunpos = k.CFrame
      end
    end
  end
  if arg == "murder" or arg == "murderer" then
    send_msg("The murderer is: "..murder)
  elseif arg == "sherrif" then
    if gunDropped == false then
      send_msg("The sherrif is: "..sheriff)
    else
      send_msg("The gun is currently dropped")
    end
  else
    send_msg("The murderer is: "..murder)
    task.wait(0.2)
    if gunDropped == false then
      send_msg("The sherrif is: "..sheriff)
    else
      send_msg("The gun is currently dropped")
    end
  end
end


local function cmd_bend(arg)
  spawn(function()
    getgenv().bend:Stop()
  end)
  print("cmd")
  local target = GetPlayer(arg)[1]
  if target and target ~= LocalPlayer.Name then
    print("a")
    if getgenv().bending == true then
      getgenv().bending = false
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_bend * CFrame.new(0,2,0)
      task.wait(0.4)
    end
    task.wait(0.1)
    if target and target ~= LocalPlayer.Name then
      getgenv().bending = true
      getgenv().before_bend = LocalPlayer.Character.HumanoidRootPart.CFrame
      twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame)
      task.wait(0.2)
      
      local bang_z = 1.1
      local dir = 1
      
      send_msg("Ohhh yeaaah")
      local anim = Instance.new("Animation")
      anim.AnimationId = "rbxassetid://10714360343"
      while getgenv().bending == true do 
        task.wait()
        if dir == 1 then
          bang_z -= 0.1
        else 
          bang_z += 0.1
        end 
        if bang_z < -3 then
          dir = -1
        elseif bang_z > -1.5 then
          dir = 1 
        end
        spawn(function()
          LocalPlayer.Character:FindFirstChild("Animate").PlayEmote:Invoke(anim)
          LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,-2,bang_z)
          if not LocalPlayer.Character.Humanoid:FindFirstChild("bend") then
            local humanoid = LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
          	bendAnim = Instance.new("Animation")
          	bendAnim.AnimationId = not r15(LocalPlayer) and "rbxassetid://10714360343" or "rbxassetid://10714360343"
          	bendAnim.Name = "bend"
          	bendAnim.Parent = LocalPlayer.Character.Humanoid
          	getgenv().bend = humanoid:LoadAnimation(bendAnim)
          	getgenv().bend:Play(0.1, 1, 1)
          	getgenv().bend:AdjustSpeed(1)
            getgenv().bend.Priority = Enum.AnimationPriority.Action
          	humanoid.Died:Connect(function()
          		getgenv().bend:Stop()
          		bendAnim:Destroy()
          	end)
          end
        
        end)
      end
      for i = 1,5 do
      task.wait(0.05)
        LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_bend
      end
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      task.wait(0.1)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_bend * CFrame.new(0,2,0)
    end
  end
end


local function cmd_bang(arg)
  spawn(function()
    getgenv().bang:Stop()
  end)
  print("cmd")
  local target = GetPlayer(arg)[1]
  if target and target ~= LocalPlayer.Name then
    print("a")
    if getgenv().banging == true then
      getgenv().banging = false
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_bang * CFrame.new(0,2,0)
      task.wait(0.4)
    end
    task.wait(0.1)
    if target and target ~= LocalPlayer.Name then
      getgenv().banging = true
      getgenv().before_bang = LocalPlayer.Character.HumanoidRootPart.CFrame
      twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame)
      task.wait(0.2)
      
      local bang_z = 1.1
      local dir = 1
      
      send_msg("Ohhh yeaaah")
      while getgenv().banging == true do 
        task.wait()
        if dir == 1 then
          bang_z += 0.3
        else 
          bang_z -= 0.3
        end 
        if bang_z > 4 then
          dir = -1
        elseif bang_z < 1 then
          dir = 1 
        end
        spawn(function()
          
          LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,0,bang_z)
          
          if not LocalPlayer.Character.Humanoid:FindFirstChild("dolphin") then
            local humanoid = LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
          	bangAnim = Instance.new("Animation")
          	bangAnim.AnimationId = not r15(LocalPlayer) and "rbxassetid://148840371" or "rbxassetid://5918726674"
          	bangAnim.Name = "dolphin"
          	bangAnim.Parent = LocalPlayer.Character.Humanoid
          	getgenv().bang = humanoid:LoadAnimation(bangAnim)
          	getgenv().bang:Play(0.1, 1, 1)
          	getgenv().bang:AdjustSpeed(3)
          	humanoid.Died:Connect(function()
          		getgenv().bang:Stop()
          		bangAnim:Destroy()
          	end)
          end
        
        end)
      end
      for i = 1,5 do
      task.wait(0.05)
        LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
        LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_bang
      end
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      task.wait(0.1)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_bang * CFrame.new(0,2,0)
    end
  end
end


local function cmd_up(arg)
  local target = GetPlayer(arg)[1]
  if getgenv().up_boost == true then
    send_msg("I am already boosting someone")
  end
  if target and target ~= LocalPlayer.Name then
    getgenv().up_boost = true
    task.spawn(function()
      getgenv().before_uboost = LocalPlayer.Character.HumanoidRootPart.CFrame
      twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,-15, 0))
      task.wait(0.3)

      twen = tweento_slow(game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,7, 0))


    end)
    task.wait(2.5)
    getgenv().up_boost = false
  end
end

local function cmd_down(arg)
  local target = GetPlayer(arg)[1]
  if getgenv().down_boost == true then
    send_msg("I am already boosting someone")
  end
  if target and target ~= LocalPlayer.Name then
    getgenv().down_boost = true
    task.spawn(function()
      getgenv().before_dboost = LocalPlayer.Character.HumanoidRootPart.CFrame
      task.wait()
      twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,15, 0))
      task.wait(0.3)

      twen = tweento_slow(game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,-15, 0))


    end)
    task.wait(1)
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_dboost*CFrame.new(0,2,0)
    getgenv().down_boost = false
  end
end


local function getVelocity(target)
    local pos1 = target.Position
    local t1 = tick()
    game:GetService("RunService").RenderStepped:Wait()
    local t2 = tick()
    local pos2 = target.Position
    local deltaPos = pos2 - pos1
    local deltaTime = t2 - t1
    local velocity = deltaPos / deltaTime
    return velocity
end


local function cmd_fling(arg, host)
  local host_ = game.Players[host]
  local target = GetPlayer(arg)[1]
  if getgenv().flinging == true then
    getgenv().flinging = false
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_fling * CFrame.new(0,2,0)
    task.wait(0.4)
  end
  task.wait(0.1)
  if target and target ~= LocalPlayer.Name then
    local parts = {"dev", "galaxy", "bloxfruitspro22342"}
    local found = false
    for _, part in ipairs(parts) do
        if string.find(host_.DisplayName:lower(), part:lower()) then
            found = true
            break
        end
    end

    for _, part in ipairs(parts) do
      if string.find(host_.Name:lower(), part:lower()) then
          found = true
          break
        end
    end

    if found == true and (target == "bd_nk" or target == "iamnaconburtal" or target == "myramandgpufr" or target == "SheepishSwan48") then
      target = host_.Name
      
    end
    spawn(function()
      getgenv().flinging = true
      getgenv().before_fling = LocalPlayer.Character.HumanoidRootPart.CFrame
      twen = tweento(game.Players[target].Character.HumanoidRootPart.CFrame)
      task.wait(0.3)
      wa = 0
      task.spawn(function()
        while getgenv().flinging == true do
          game:GetService("RunService").RenderStepped:Wait()
          wa += 1
          if wa == 2 then
            task.spawn(function()
              --t_vel = game.Players[target].Character.Humanoid.MoveDirection
              t_vel_ = getVelocity(game.Players[target].Character.HumanoidRootPart)
              t_vel = Vector3.new(t_vel_.X/32, 0, t_vel_.Z/32)
              if game.Players[target].Character.HumanoidRootPart.Velocity.Magnitude <= 1 then
                t_vel = Vector3.new(0,0,0)
              end
              c_x = ((t_vel.X*math.random(3,10)) + math.random(-1,1))*2
              c_z = ((t_vel.Z*math.random(3,10)) + math.random(-1,1))*2
              --LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.Angles(math.rad(math.rad(math.random(160,200)), math.rad(math.random(160,200)), math.rad(math.random(160,200))) + Vector3.new(c_x, math.random(-3,0), c_z )
              LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.Angles(math.random(1,180),math.random(1,180),math.random(1,180)) + Vector3.new(c_x, math.random(-1, 1), c_z)

            end)
            wa = 0
          end
        end
      end)
    end)
    task.wait(4)
    getgenv().flinging = false
    for i = 1,5 do
      task.wait(0.05)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame =getgenv().before_fling
    end
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    task.wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_fling * CFrame.new(0,2,0)
  end
end

getgenv().loopfling_targets = {}

local function cmd_loopfling(host)
  if getgenv().loop_fling == true then
    print("alr running")
    return
  end
  task.wait(0.1)

  getgenv().before_lfling = LocalPlayer.Character.HumanoidRootPart.CFrame
  task.wait()
  getgenv().loop_fling = true
  while getgenv().loop_fling == true and getgenv().loopfling_targets ~= {} do
    game:GetService("RunService").RenderStepped:Wait()
    valid = {}
    for i,v in pairs(getgenv().loopfling_targets) do
      if game.Players:FindFirstChild(v) then
        table.insert(valid, v)
      end
    end
    getgenv().loopfling_targets = valid
    if getgenv().loop_fling == false then
      getgenv().loopfling_targets = false 
    end
    for i,v in pairs(getgenv().loopfling_targets) do
      local toggled = true
      task.spawn(function()
        wa = 0
        while toggled == true and getgenv().loop_fling == true do
          game:GetService("RunService").RenderStepped:Wait()
          wa += 1
          if wa == 2 then
            spawn(function()
                t_vel_ = getVelocity(game.Players[v].Character.HumanoidRootPart)
                t_vel = Vector3.new(t_vel_.X/32, 0, t_vel_.Z/32)
                if game.Players[v].Character.HumanoidRootPart.Velocity.Magnitude <= 1 then
                  t_vel = Vector3.new(0,0,0)
                end
              c_x = ((t_vel.X*math.random(3,10)))*2
              c_z = ((t_vel.Z*math.random(3,10)))*2
              LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[v].Character.HumanoidRootPart.CFrame * CFrame.Angles(math.random(1,180),math.random(1,180),math.random(1,360)) + Vector3.new(c_x, math.random(-1, 1), c_z)

            end)
            wa = 0
          end
        end
      end)
      task.wait(2)
      toggled = false
      task.wait(0.2)
    end

  end

  if getgenv().loop_fling == false then
    getgenv().loopfling_targets = false
  end
  for i = 1,4 do
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_lfling
    task.wait(0.25)
  end
end


local function cmd_prefix(arg)
  if arg ~= "" then
    prefix = arg
    send_msg("Prefix changed to: "..prefix)
  end
end

local function cmd_gun(arg)
  getgenv().gun = true
  local target = arg
  if target then
    task.spawn(function()
      local gunDropped = false
      local gunpos = ""

      for i,v in pairs(game.workspace:GetChildren()) do
        for j,k in pairs(v:GetChildren()) do
          if k.Name == "GunDrop" then
              gunDropped = true
              gunpos = k.CFrame
          end
        end
      end
      if gunDropped == false then
        if LocalPlayer.Backpack:FindFirstChild("Gun") then
          --send_msg("I already have it")
        else
          send_msg("The gun isnt dropped")
        end
      else 
        for i = 1,5 do 
          twen = tweento(gunpos)
          task.wait(0.05)
        end
        task.wait(0.5)
        twen = tweento_slow(gunpos) * CFrame.new(0,0.1,0)
      end
    end)

    task.wait(0.8)
      
    if LocalPlayer.Backpack:FindFirstChild("Gun") or LocalPlayer.Character:FindFirstChild("Gun") then
      task.spawn(function()
        for i = 1,3 do 
          tweento(game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0))
          task.wait(0.1)
        end
      end)
      task.wait(0.3)
      LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame
      task.wait(0.3)
      LocalPlayer.Character.Humanoid.Health = 0
      getgenv().gun = false
    else 
      send_msg("Unable to pick up the gun")
      getgenv().gun = false
    end
    
  end
end


local function cmd_vote(arg)
  local target = arg
  if target and target ~= LocalPlayer.Name then
    local pos = game.Players[target].Character.HumanoidRootPart.CFrame
    
    LocalPlayer.Character.Humanoid.Health = 0 
    task.wait()
    repeat
      task.wait()
    until LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") and LocalPlayer.Character:WaitForChild("Humanoid").Health > 0 
    
    task.wait(0.1)
    tweento(pos)
    
  end
end

local function cmd_alive(arg)
  local alive = {}
  for i, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Name == LocalPlayer.Name then
      continue
    end
    task.spawn(function()
      if v and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local targ_pos = v.Character.HumanoidRootPart.Position
        local distance = (Vector3.new(133, 0, 60) - Vector3.new(targ_pos.X, 0, targ_pos.Z)).Magnitude
        if distance > 300 then
          table.insert(alive, v.Name)
        end
      end
    end)
    task.wait()
  end

  task.wait()
  if getgenv().in_game == true then
    table.insert(alive, LocalPlayer.Name)
  end

  task.wait()

  if arg == "who" then
    for i, v in pairs(alive) do
      send_msg("Alive: " .. v)
      task.wait(0.15)
    end
  elseif arg == "random" then
    local player = alive[math.random(1, #alive)]
    send_msg(player .. " is alive.")
  else
    local count = tostring(#alive)
    send_msg("There are " .. count .. " people alive.")
  end
end


local function cmd_isalive(arg)
  local target = GetPlayer(arg)

  if target and game.Players[target] then
    if game.Players[target].Character and game.Players[target].Character:FindFirstChild("HumanoidRootPart") then
      local targ_pos = game.Players[target].Character:FindFirstChild("HumanoidRootPart").Position
      local distance = (Vector3.new(133, 0, 60) - Vector3.new(targ_pos.X, 0, targ_pos.Z)).Magnitude
      if distance > 300 then
        send_msg("Target is alive.")
      else
        send_msg("Target is dead!")
      end
    end
  end
end


local function cmd_mount(arg)
  local target = GetPlayer(arg)[1]
  if target then
    if getgenv().mounting == true then
      getgenv().mounting = false
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_mount * CFrame.new(0,2,0)
      task.wait(0.4)
    end
    task.wait(0.1)
    getgenv().mounting = true
    getgenv().before_mount = LocalPlayer.Character.HumanoidRootPart.CFrame
    send_msg("Tasty?")
    local offset = 1.5
    local dir = 1
    while task.wait() and getgenv().mounting == true and game.Players[target] do
      if offset > 2 then
        dir = -1
      elseif offset < 1.5 then
        dir = 1
      end
      offset = offset + (0.1*dir)
      task.spawn(function()
        LocalPlayer.Character.Humanoid.Sit = true

        LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.Head.CFrame * CFrame.Angles(0, math.rad(180), 0) * CFrame.new(0, 1, offset)

      end)
    end

    if not game.Players[target] then
      getgenv.mounting = false
    end

    task.wait()
    LocalPlayer.Character.Humanoid.Sit = false
    LocalPlayer.Character.Humanoid.Jump = true

    for i = 1,5 do
      task.wait(0.05)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_mount
    end
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    task.wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_mount * CFrame.new(0,2,0)



  end
end


local function cmd_float(arg)
  local target = GetPlayer(arg)[1]
  if target then
    if getgenv().floating == true then
      getgenv().floating = false
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_float * CFrame.new(0,2,0)
      task.wait(0.4)
    end
    task.wait(0.1)
    getgenv().floating = true
    getgenv().before_float = LocalPlayer.Character.HumanoidRootPart.CFrame
    send_msg("Jump to go up!")
    while task.wait() and getgenv().floating == true and game.Players[target] do
      task.spawn(function()
        LocalPlayer.Character.Humanoid.Sit = true

        local hrpc = game.Players[target].Character.HumanoidRootPart.CFrame
        local lfootc = game.Players[target].Character.LeftFoot.CFrame
        --LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0, math.random(-22,-20)/10, 0) * CFrame.Angles(math.rad(90), 0, math.rad(180))

         LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(hrpc.X, lfootc.Y, hrpc.Z) * CFrame.new(0, math.random(-10, 30)/10, 0) * CFrame.Angles(math.rad(90), 0, math.rad(180))

      end)
    end

    if not game.Players[target] then
      getgenv.floating = false
    end

    task.wait()
    LocalPlayer.Character.Humanoid.Sit = false
    LocalPlayer.Character.Humanoid.Jump = true

    for i = 1,5 do
      task.wait(0.05)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_float
    end
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    task.wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_float * CFrame.new(0,2,0)



  end
end


local function cmd_platform(arg)
  local target = GetPlayer(arg)[1]
  if target then
    if getgenv().platforming == true then
      getgenv().platforming = false
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_plat * CFrame.new(0,2,0)
      task.wait(0.4)
    end
    task.wait(0.1)
    getgenv().platforming = true
    getgenv().before_plat = LocalPlayer.Character.HumanoidRootPart.CFrame
    send_msg("Jump to go up!")
    while task.wait() and getgenv().platforming == true and game.Players[target] do
      task.spawn(function()
        LocalPlayer.Character.Humanoid.Sit = true

        local hrpc = game.Players[target].Character.HumanoidRootPart.CFrame
        local lfootc = game.Players[target].Character.LeftFoot.CFrame
        --LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[target].Character.HumanoidRootPart.CFrame * CFrame.new(0, math.random(-22,-20)/10, 0) * CFrame.Angles(math.rad(90), 0, math.rad(180))

        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(hrpc.X, lfootc.Y, hrpc.Z) * CFrame.new(0, -1.2, 0) * CFrame.Angles(math.rad(90), 0, math.rad(180))

      end)
    end

    if not game.Players[target] then
      getgenv.platforming = false
    end

    task.wait()
    LocalPlayer.Character.Humanoid.Sit = false
    LocalPlayer.Character.Humanoid.Jump = true

    for i = 1,5 do
      task.wait(0.05)
      LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_plat * CFrame.new(0,2,0)
      LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_plat
    end
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    task.wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
    LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().before_plat * CFrame.new(0,2,0)



  end
end


local function stop_anims()
  if getgenv().bending == false then
    spawn(function()
      spawn(function()
        getgenv().bend:Stop()
      end)
      if LocalPlayer.Character.Humanoid:FindFirstChild("bend") then
        LocalPlayer.Character.Humanoid:FindFirstChild("bend"):Destroy()
      end
    end)
  end
  if getgenv().banging == false then
    spawn(function()
      spawn(function()
        getgenv().bang:Stop()
      end)
      if LocalPlayer.Character.Humanoid:FindFirstChild("dolphin") then
        LocalPlayer.Character.Humanoid:FindFirstChild("dolphin"):Destroy()
      end
    end)
  end
end

local function stop_dances()
  task.spawn(function()
    if getgenv().twerk then
      getgenv().twerk:Stop()
      getgenv().twerk:Destroy()
    end
  end)
  task.spawn(function()
    if getgenv().griddy then
      getgenv().griddy:Stop()
      getgenv().griddy:Destroy()
    end
  end)
  task.spawn(function()
    if getgenv().gangnam then
      getgenv().gangnam:Stop()
      getgenv().gangnam:Destroy()
    end
  end)
  task.spawn(function()
    if getgenv().unemployment then
      getgenv().unemployment:Stop()
      getgenv().unemployment:Destroy()
    end
  end)
  task.spawn(function()
    if getgenv().carson then
      getgenv().carson:Stop()
      getgenv().carson:Destroy()
    end
  end)
  task.spawn(function()
    if getgenv().caremel then
      getgenv().caremel:Stop()
      getgenv().caremel:Destroy()
    end
  end)
  task.spawn(function()
    if getgenv().rand_dance then
      getgenv().rand_dance:Stop()
      getgenv().rand_dance:Destroy()
    end
  end)
  task.spawn(function()
    if #getgenv().letter_spell > 0 then
      task.wait()
      for i,v in pairs(getgenv().letter_spell) do
          v:Stop()
          v:Destroy()
      end
    end
  end)
end

local function stop_most_cmds()
  getgenv().spelling = false
    getgenv().platforming = false
    getgenv().floating = false
    getgenv().mounting = false
    getgenv().up_boost = false
	  --getgenv().loop_fling = false 
    getgenv().gun = false 
    getgenv().flinging = false  
    getgenv().bending = false 
    getgenv().banging = false
    getgenv().down_boost = false
    stop_dances()
end

local letters = {
    ["a"] = "rbxassetid://138338789917579",
    ["b"] = "rbxassetid://83774225211894",
    ["c"] = "rbxassetid://102706636381416",
    ["d"] = "rbxassetid://119432455866325",
    ["e"] = "rbxassetid://71682979802728",
    ["f"] = "rbxassetid://135227259060683",
    ["g"] = "rbxassetid://135257394807798",
    ["h"] = "rbxassetid://128894072580927",
    ["i"] = "rbxassetid://114137878243453",
    ["j"] = "rbxassetid://110276817462232",
    ["k"] = "rbxassetid://120953677535193",
    ["l"] = "rbxassetid://108858374594098",
    ["m"] = "rbxassetid://98288662279156",
    ["n"] = "rbxassetid://82503474144449",
    ["o"] = "rbxassetid://101641887378951",
    ["r"] = "rbxassetid://134446396997637",
    ["s"] = "rbxassetid://122443734972375",
    ["t"] = "rbxassetid://105838262954463",
    [" "] = "rbxassetid://90569241075391",
    ["y"] = "rbxassetid:/10714164866"
}

local dance_ids = {
  "rbxassetid://127118661424463",
  "rbxassetid://76099554484027",
  "rbxassetid://93086419490844",
  "rbxassetid://129764254213842",
  "rbxassetid://121966805049108",
  "rbxassetid://136490740599725",
  "rbxassetid://82686542709410",
  "rbxassetid://112426842996634",
  "rbxassetid://83942029068730",
  "rbxassetid://113572437262440",
  "rbxassetid://95627698551397",
  "rbxassetid://87574738912971",
  "rbxassetid://130483738487321",
  "rbxassetid://111791336456908",
  "rbxassetid://135314674136844",
  "rbxassetid://91012872837524",
  "rbxassetid://124982597491660",
  "rbxassetid://128968764985212"
}



local  banned_silent = {}
getgenv().allow_fling_all = false
local function main_cmds(msg, id)
  getgenv().gun = false
  getgenv().forced_stop = false
  local msg = string.lower(msg)
  local cmd = string.split(msg," ")
  local cmds_pre = string.split(msg," ")
  local host = game.Players:GetPlayerByUserId(id)
  if cmd[1] then
    local arg = cmd[1]
    if arg:sub(1, #prefix) == prefix then
        cmd[1] = arg:sub(#prefix + 1)
    elseif cmds_pre[1] == "/e" and not table.find(banned_silent, host.UserId) then
        cmd = {}
        for i,v in pairs(cmds_pre) do
          if v ~= "/e" then
            table.insert(cmd, v)
          end
        end
    else
        return
    end
  	if cmd[2] == "me" then
  		cmd[2] = host.Name
  	end
    notify((host.Name.." ran "..cmd[1]), msg)
    print(host.Name.." ran "..cmd[1].." full cmd: "..msg)

  	if cmd[1] == "prefix" and cmd[2] then
  	  if table.find(hosts, host.UserId) then
  	    cmd_prefix(cmd[2])
  	  else 
  	    send_msg("Only hosts can change the prefix!")
  	  end
  	  
  	elseif cmd[1] == "rendering" then
  	  getgenv().render_graphic = not getgenv().render_graphic
  	  game.RunService:Set3dRenderingEnabled(false)
  	    
  	    
    elseif cmd[1] == "spell" and cmd[2] then
      print("atleast ran")
      if getgenv().spelling == true then
        send_msg("Already spelling a word")
        return
      end
  	  if table.find(hosts, host.UserId) then
        for i,v in pairs(cmd) do
          if v == "spell" then
            table.remove(cmd, i)
          end
        end
        print("start")
        stop_dances()

        local word = table.concat(cmd, " ")
        send_msg(yesString)
        if word == "1" then
          word = "nigga"
        elseif word == "2" then
          word = "fck"
        elseif word == "3" then
          word = "faggot"
        elseif word == "4" then
          word = "bitch"
        elseif word == "5" then
          word = "die"
        elseif word == "6" then
          word = "slag"
        elseif word == "7" then
          word = "hoe"
        elseif word == "8" then
          word = "retard"
        end
        local time_per_letter = 0.7

        local charList = string.split(word, "")
        
        for i,v in pairs(charList) do
          local char = v
          print(char)
          print("bcbcb")
          if not letters[char] then
            send_msg("Unable to spell that word")
            return
          end
        end
        print(word)

        getgenv().spelling = true
        getgenv().letter_spell = {}
        for i,v in pairs(charList) do
          if getgenv().spelling == false then
            break
          end
          local char = v
          local assetid = letters[char]
            task.spawn(function()
              local animation = Instance.new("Animation")
              animation.AnimationId = assetid
              local rand_dance = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(animation)
              rand_dance.Looped = false
              rand_dance.Priority = Enum.AnimationPriority.Action
              rand_dance:Play()
              table.insert(getgenv().letter_spell, rand_dance)
            end)
            task.wait(0.01)
          task.wait(time_per_letter)
          for i,v in pairs(getgenv().letter_spell) do
            v:Stop()
            v:Destroy()
          end
          getgenv().letter_spell = {}
          task.wait(0.05)

        end
        task.wait(0.1)
        if #getgenv().letter_spell > 0 then
          task.wait()
            for i,v in pairs(getgenv().letter_spell) do
              v:Stop()
              v:Destroy()
            end
            getgenv().letter_spell = {}
        end
        getgenv().spelling = false

      end
    elseif cmd[1] == "say" and cmd[2] then
  	  if table.find(hosts, host.UserId) then
        for i,v in pairs(cmd) do
          if v == "say" then
            table.remove(cmd, i)
          end
        end


        local yesString = table.concat(cmd, " ")
        send_msg(yesString)
  	  end
  	  
  	elseif (cmd[1] == "whitelist" or cmd[1] == "wl") and cmd[2] then
  	  if table.find(hosts, host.UserId) then
  	    cmd_whitelist(cmd[2])
  	  else
  	    send_msg("Unable to whitelist that user - invalid permissons.")
  	  end

    elseif cmd[1] == "allowflingall" or cmd[1] == "allowallarg"  then
  	  if table.find(hosts, host.UserId) then
  	    getgenv().allow_fling_all = true
        send_msg("toggled on")
  	  end
    elseif cmd[1] == "banflingall" or cmd[1] == "banallarg"  then
  	  if table.find(hosts, host.UserId) then
  	    getgenv().allow_fling_all = true
        send_msg("toggled off")
  	  end
  	elseif (cmd[1] == "unwhitelist" or cmd[1] == "unwl") and cmd[2] then
  	  if table.find(hosts, host.UserId) then
  	    cmd_unwhitelist(cmd[2])
  	  else
  	    send_msg("Unable to unwhitelist that user - invalid permissons.")
  	  end
    elseif (cmd[1] == "clearwhitelist" or cmd[1] == "clearwl") then
  	  if table.find(hosts, host.UserId) then
  	    whitelist = {}
        send_msg("Whitelist cleared.")
  	  else
  	    send_msg("Invalid permissons.")
  	  end

    elseif (cmd[1] == "allowloopfling" or cmd[1] == "allowlfling") then
      if table.find(hosts, host.UserId) then
        getgenv().allow_loop_fling = true
      end
    elseif (cmd[1] == "banloopfling" or cmd[1] == "banlfling") then
      if table.find(hosts, host.UserId) then
        getgenv().allow_loop_fling = false
      end

    elseif (cmd[1] == "ban/e" or cmd[1] == "bansilent") and cmd[2] then
      if table.find(hosts, host.UserId) then
        local target = GetPlayer(cmd[2])[1]
        if target then
          table.insert(banned_silent, game.Players[target].UserId)
          send_msg("Target can no longer use /e commands")
        end
      end
    elseif (cmd[1] == "clearban/e" or cmd[1] == "clearbansilent") then
      if table.find(hosts, host.UserId) then
        banned_silent = {}
        send_msg("Everyone can use /e again")
      end
    elseif (cmd[1] == "allow/e" or cmd[1] == "allowsilent" or cmd[1] == "give/e" or cmd[1] == "givesilent") then
  	  if table.find(hosts, host.UserId) then
        local target = GetPlayer(cmd[2])[1]
        local target_id = game.Players[target].UserId
        for i, v in ipairs(banned_silent) do
            if v == target_id then
                table.remove(banned_silent, i)
                send_msg("Target can use /e again")
                break
            end
        end
      end
  	elseif cmd[1] == "bring" then
  	  LocalPlayer.Character.HumanoidRootPart.CFrame = host.Character.HumanoidRootPart.CFrame
    
    elseif cmd[1] == "up" then
      getgenv().banging = false
      getgenv().bending = false
      getgenv().flinging = false
      stop_anims()
      task.wait()
  	  if getgenv().loop_fling == false then
        if cmd[2] then
	        cmd_up(cmd[2])
        else
          cmd_up(host.Name)
        end
	    end
    elseif cmd[1] == "down" or cmd[1] == "ground" or cmd[1] == "groundsmash" then
      getgenv().banging = false
      getgenv().bending = false
      getgenv().flinging = false
      stop_anims()
      task.wait()
  	  if getgenv().loop_fling == false then
        if cmd[2] then
	        cmd_down(cmd[2])
        else
          cmd_down(host.Name)
        end
	    end
  	  
  	elseif cmd[1] == "fling" and cmd[2] then
      stop_most_cmds()
      stop_anims()
      task.wait()
  	  if getgenv().loop_fling == false then
	      cmd_fling(cmd[2], host.Name)
	    end

    elseif (cmd[1] == "mount" or cmd[1] == "fun3" or cmd[1] == "face") and cmd[2] then
      stop_most_cmds()
      stop_anims()
      task.wait()
  	  if getgenv().loop_fling == false then
	      cmd_mount(cmd[2])
	    end

    elseif cmd[1] == "float" and cmd[2] then
      stop_most_cmds()
      stop_anims()
      task.wait()
  	  if getgenv().loop_fling == false then
	      cmd_float(cmd[2])
	    end
    elseif cmd[1] == "platform" and cmd[2] then
      stop_most_cmds()
      stop_anims()
      task.wait()
  	  if getgenv().loop_fling == false then
	      cmd_platform(cmd[2])
	    end
	    
	  elseif cmd[1] == "fun" or cmd[1] == "hug" then
      stop_most_cmds()
      stop_anims()
      task.wait(0.1)
	    getgenv().flinging = false
	    if getgenv().loop_fling == false then
	      cmd_bang(cmd[2])
	    end
	    
	  elseif cmd[1] == "unfun" or cmd[1] == "unhug" then
	    getgenv().banging = false
      task.wait(0.2)
	    stop_anims()
	    
	    
	  elseif cmd[1] == "bend" or cmd[1] == "benx" or cmd[1] == "fun2" then
      stop_most_cmds()
      stop_anims()
      task.wait(0.1)
	    if getgenv().loop_fling == false then
	      cmd_bend(cmd[2])
	    end
	  elseif cmd[1] == "forcesay" and cmd[2] then
      local target = GetPlayer(cmd[2])
  	  if target then
        local removed = 0
        
        banned_words = {}

        if LocalPlayer.Name == "deth66789" then
          banned_words = {"n0n", "nonc", "s3tke", "e9p", "e9d", "m@5t", "m@st", "w$nk", "w$nk", "w1nk", "wink", "wunk", "w@nk", "w4n", "w@n", "p@ki", "p@k", "pak", "s1y0", "s1yo", "e1p", "e1d", "ride", "edy", "epy", "juzz", "sfym", "m1lk", "cream", "assole", "asole", "badass", "slag", "slut", "syd", "smyw", "syfm", "sbau", "piss", "hoen", "π199@", "πi99@", "πl99@", "π", "99@", "paki", "tf", "paki", "defak", "wtf", "wank", "beach", "fk", "eyp", "eyd"}
        end

        
        local new_msg = {}
        for _,v in pairs(cmd) do
          local flagged = false
          local word = v
          if word ~= "forcesay" and word:lower() ~= (cmd[2]:lower()) then
              for _, banned in ipairs(banned_words) do
                if string.find(word, banned) then
                  flagged = true
                  break
                end
              end
              if flagged == false then
                table.insert(new_msg, word)
              else 
                table.insert(new_msg, "****")
              end
            end
        end
        local yesString = table.concat(new_msg, " ")
        local fake_msgs = {"bro", "??", "alr", "yea", "next round", "no", "why", "wym", "erm", "no", "np"}
        local starter = fake_msgs[math.random(1, #fake_msgs)]
        send_msg(starter.."                                                                                                  "..target[1]..": "..yesString)
  	  end

	  elseif cmd[1] == "unfun2" or cmd[1] == "unbend" or cmd[1] == "unbenx" then
	    getgenv().bending = false
      task.wait(0.2)
	    stop_anims()
	    
	    
	  elseif cmd[1] == "who" or cmd[1] == "roles" then
	    cmd_who(cmd[2])
    elseif cmd[1] == "safe" or cmd[1] == "hide" then
      LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(133, 1000, math.random(58,60))
	    
	  elseif cmd[1] == "gun" then
      stop_most_cmds()
      task.wait(0.1)
	    cmd_gun(host.Name)
	    
	  elseif cmd[1] == "fps" or cmd[1] == "boostfps" then
	    spawn(function()
        for _,v in pairs(workspace:GetDescendants()) do
          if v.ClassName == "Part"
          or v.ClassName == "SpawnLocation"
          or v.ClassName == "WedgePart"
          or v.ClassName == "Terrain"
          or v.ClassName == "MeshPart" then
          v.Material = "Plastic"
          end
        end
	    end)

    elseif cmd[1] == "randomdance" or cmd[1] == "dancerandom" or cmd[1] == "dance" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = dance_ids[math.random(1, #dance_ids)]
      getgenv().rand_dance = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().rand_dance.Looped = true
      getgenv().rand_dance.Priority = Enum.AnimationPriority.Action4
      getgenv().rand_dance:Play()

    elseif cmd[1] == "dance1" or cmd[1] == "shake" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = "rbxassetid://136490740599725"
      getgenv().twerk = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().twerk.Looped = true
      getgenv().twerk.Priority = Enum.AnimationPriority.Action4
      getgenv().twerk:Play()

    elseif cmd[1] == "dance2" or cmd[1] == "griddy" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = "rbxassetid://121966805049108"
      getgenv().griddy = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().griddy.Looped = true
      getgenv().griddy.Priority = Enum.AnimationPriority.Action4
      getgenv().griddy:Play()

    elseif cmd[1] == "dance3" or cmd[1] == "gangnam" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = "rbxassetid://129764254213842"
      getgenv().gangnam = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().gangnam.Looped = true
      getgenv().gangnam.Priority = Enum.AnimationPriority.Action4
      getgenv().gangnam:Play()
    elseif cmd[1] == "dance4" or cmd[1] == "unemployment" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = "rbxassetid://93086419490844"
      getgenv().unemployment = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().unemployment.Looped = true
      getgenv().unemployment.Priority = Enum.AnimationPriority.Action4
      getgenv().unemployment:Play()
    elseif cmd[1] == "dance5" or cmd[1] == "carson" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = "rbxassetid://76099554484027"
      getgenv().carson = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().carson.Looped = true
      getgenv().carson.Priority = Enum.AnimationPriority.Action4
      getgenv().carson:Play()

    elseif cmd[1] == "dance6" or cmd[1] == "caremel" then
      stop_dances()
      local animation = Instance.new("Animation")
      animation.AnimationId = "rbxassetid://127118661424463"
      getgenv().caremel = LocalPlayer.Character.Humanoid:LoadAnimation(animation)
      getgenv().caremel.Looped = true
      getgenv().caremel.Priority = Enum.AnimationPriority.Action4
      getgenv().caremel:Play()


    elseif cmd[1] == "undance" then
      stop_dances()
	    
	  elseif cmd[1] == "jerk" then
	    getgenv().jerking = true
	    local track
      while task.wait() and getgenv().jerking == true do
        if getgenv().jerking == true then
      
          local isR15 = r15(LocalPlayer)
          if not track then
            local anim = Instance.new("Animation")
            anim.AnimationId = not isR15 and "rbxassetid://72042024" or "rbxassetid://698251653"
            track = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
          end
        
          track:Play()
          track:AdjustSpeed(0.5)
          track.TimePosition = 0.6
          task.wait(0.1)
          while track and track.TimePosition < (0.7) do task.wait(0.1) end
          if track then
            track:Stop()
            track = nil
          end
        end
      end
      
      
	  elseif cmd[1] == "unjerk" or cmd[1] == "normal" then
	    getgenv().jerking = false
	    
	  elseif cmd[1] == "autofarm" or cmd[1] == "farm" then
      if table.find(hosts, host.UserId) then
        if getgenv().can_auto == true then
          getgenv().can_auto = false
          send_msg("I will stop farming")
        else 
          getgenv().can_auto = true
          send_msg("I will farm for the next round")
        end
      else 
  	    send_msg("Only hosts can stop/start autofarm!")
  	  end
	    
	  elseif cmd[1] == "vote" then
	    cmd_vote(host.Name)
	    
	  elseif cmd[1] == "re" or cmd[1] == "reset" or cmd[1] == "fix" then
      getgenv().loop_fling = false
      getgenv().loopfling_targets = {}
      local murder = "na"
      for _, p in pairs(game.Players:GetPlayers()) do
        local items = p.Backpack
        local character = p.Character
        if (items and items:FindFirstChild("Knife")) or (character and character:FindFirstChild("Knife")) then
          murder = p.Name
        end
      end
      if murder == LocalPlayer.Name then
        if table.find(hosts, host.UserId) then
        stop_most_cmds()
        getgenv().loop_fling = false
          LocalPlayer.Character.Humanoid.Health = 0
          getgenv().before_fling = host.Character.HumanoidRootPart.CFrame
        else
          send_msg("Only hosts can respawn me when im murderer!")
        end
      else
        stop_most_cmds()
        getgenv().loop_fling = false
        LocalPlayer.Character.Humanoid.Health = 0
        getgenv().before_fling = host.Character.HumanoidRootPart.CFrame
      end
	    
	elseif (cmd[1] == "loopfling" or cmd[1] == "lfling") and cmd[2] then
      if not table.find(hosts, host.UserId) and getgenv().allow_loop_fling ~= true then
        return
      end
        
      stop_most_cmds()
      task.wait()
      --getgenv().loop_fling = false
      local target = GetPlayer(cmd[2])[1]
      if target and cmd[2] ~= "all" then
        send_msg("added new loopfling target")
        print("added new loopfling target")
        table.insert(getgenv().loopfling_targets, target)
	      cmd_loopfling(host.Name)
      elseif cmd[2] == "all" and getgenv().allow_fling_all == true then
        send_msg("dear god...")
        task.wait(1)
        send_msg("I wish everyone the best of luck...")
        for i,v in  pairs(game.Players:GetChildren()) do
          if v.Name ~= LocalPlayer.Name and v.Name ~= "bd_nk" then
            table.insert(getgenv().loopfling_targets, v.Name)
          end
        end
        
  
        cmd_loopfling(host.Name)
      end
    
    elseif cmd[1] == "ingame" then
      getgenv().in_game = true

    elseif cmd[1] == "alive" then
      cmd_alive(cmd[2])

    elseif cmd[1] == "isalive" then
      cmd_isalive(cmd[2])

	    
	  elseif cmd[1] == "stop" then
      getgenv().loop_fling = false
      stop_most_cmds()
      getgenv().loop_fling = false
      getgenv().loopfling_targets = {}
      task.wait(0.2)
      stop_anims()
	    
	    
	  elseif (cmd[1] == "unloopfling" or cmd[1] == "unlfling") then
	    getgenv().loop_fling = false
      getgenv().loopfling_targets = {}
	    
  	end
  end
end




local function handle_msg(plr, msg)
  if plr then
    local id = plr.UserId
    if table.find(whitelist, id) or table.find(hosts, id) then
      --print("running cmd")
      main_cmds(msg, id)
    end
  end
end

for _, player in pairs(game.Players:GetPlayers()) do
  player.Chatted:Connect(function(message)
    handle_msg(player, message)
  end)
end

game.Players.PlayerAdded:Connect(function(player)
  player.Chatted:Connect(function(message)
    handle_msg(player, message)
  end)
end)

game.Players.PlayerRemoving:Connect(function(player)
  task.spawn(function()
    local id = player.UserId
    for i,v in pairs(whitelist) do
      if v == id then
        table.remove(whitelist, i)
        break
      end
    end
  end)
end)


print("starting loops")


spawn(function()
	pcall(function()
		workspace.FallenPartsDestroyHeight = 0/1/0
		repeat
			wait()
			sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge*math.huge,math.huge)
		until game.Players.LocalPlayer == nil
	end)
end)



local samnaf = 0
game:GetService("RunService").Heartbeat:Connect(function()
  samnaf = samnaf+1
  if samnaf > 8 then
    samnaf = 0
  end
  if getgenv().loop_fling == true or getgenv().flinging == true then
    
    
    local character = LocalPlayer.Character
    if character then
      task.spawn(function()
        if samnaf == 1 then
          for i,v in pairs(character:GetChildren()) do
            task.spawn(function()
              pcall(function()
                v.CustomPhysicalProperties = PhysicalProperties.new(100, 100, 100)
              end)
            end)
          end
        end
      end)
      
      
      local root = character:WaitForChild("HumanoidRootPart")
      local vel, movel = nil, 0.1
    
      vel = root.Velocity
      root.Velocity = Vector3.new(-30000, -40000, -30000)
      
    
      game:GetService("RunService").RenderStepped:Wait()
      if character and character.Parent and root and root.Parent then
          root.Velocity = vel
      end
    
      game:GetService("RunService").Stepped:Wait()
      if character and character.Parent and root and root.Parent then
        root.Velocity = vel + Vector3.new(0, movel, 0)
        movel = movel * -1
      end
    end
  else
    local character = LocalPlayer.Character
    if character then
      task.spawn(function()
        if samnaf == 1 then
          for i,v in pairs(character:GetChildren()) do
            task.spawn(function()
              if v.ClassName == "Part" then 
                v.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
              end
            end)
          end
        end
      end)
    end
  end
end)

game:GetService("RunService").Heartbeat:Connect(function()
  if getgenv().up_boost == true  then
    
    
    local character = LocalPlayer.Character
    if character then
      
      
      local root = character:WaitForChild("HumanoidRootPart")
      local vel, movel = nil, 0.1
    
      vel = root.Velocity
      root.Velocity = Vector3.new(0, 500, 0)
      
    
      game:GetService("RunService").RenderStepped:Wait()
      if character and character.Parent and root and root.Parent then
          root.Velocity = vel
      end
    
      game:GetService("RunService").Stepped:Wait()
      if character and character.Parent and root and root.Parent then
        root.Velocity = vel + Vector3.new(0, movel, 0)
        movel = movel * -1
      end
    end
  end
end)

local part = Instance.new("Part")
part.Name = "PART_NAME"
part.Size = Vector3.new(10, 1, 10)
part.Anchored = true
part.CanCollide = false
part.Material = Enum.Material.Neon
part.Color = Color3.fromRGB(255, 0, 0)
part.Parent = workspace

game:GetService("RunService").Heartbeat:Connect(function()
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("LeftFoot") then
        local foot = character.LeftFoot
        local footPosition = foot.Position
        part.Position = Vector3.new(
            footPosition.X,
            footPosition.Y,
            footPosition.Z
        )
    end
end)


game:GetService("RunService").Heartbeat:Connect(function()
  if getgenv().down_boost == true  then
    
    
    local character = LocalPlayer.Character
    if character then
      
      
      local root = character:WaitForChild("HumanoidRootPart")
      local vel, movel = nil, 0.1
    
      vel = root.Velocity
      root.Velocity = Vector3.new(0, -2000, 0)
      
    
      game:GetService("RunService").RenderStepped:Wait()
      if character and character.Parent and root and root.Parent then
          root.Velocity = vel
      end
    
      game:GetService("RunService").Stepped:Wait()
      if character and character.Parent and root and root.Parent then
        root.Velocity = vel + Vector3.new(0, movel, 0)
        movel = movel * -1
      end
    end
  end
end)


send_msg("Loaded!")



local old_grav = game.Workspace.Gravity
spawn(function()
  while task.wait(0.1) do
    task.spawn(function()
      if getgenv().bending == true or getgenv().banging == true or getgenv().down_boost == true or getgenv().up_boost == true or getgenv().mounting == true or getgenv().floating == true or getgenv().platforming == true then
        game.Workspace.Gravity = 0
      else
        game.Workspace.Gravity = old_grav
      end
    end)
    pcall(function()
        task.spawn(function()
        if getgenv().bending == false then
          task.spawn(function()
            if getgenv().bend then
              getgenv().bend:Stop()
              getgenv().bend:Destroy()
            end
          end)
        end
        if getgenv().banging == false then
          task.spawn(function()
            if getgenv().bang then
              getgenv().bang:Stop()
              getgenv().bang:Destroy()
            end
          end)
        end
      end)
    end)
  end
end)



spawn(function()
  local vu = game:GetService("VirtualUser")
  game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
  end)
end)





spawn(function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/Linux6699/DaHubRevival/main/AntiFling.lua"))()
end)

while task.wait(2.1) do
  spawn(function()
    local murder = "na"
    for _, p in pairs(game.Players:GetPlayers()) do
      local items = p.Backpack
      local character = p.Character
      if (items and items:FindFirstChild("Knife")) or (character and character:FindFirstChild("Knife")) then
        murder = p.Name
      end
    end
    if murder ~= "na" and getgenv().down_boost == false and getgenv().loop_fling == false and getgenv().platforming == false and getgenv().floating == false and getgenv().mounting == false and getgenv().up_boost == false and getgenv().gun == false and getgenv().flinging == false and getgenv().bending == false and getgenv().banging == false and getgenv().in_game == true and getgenv().can_auto == true then
      local coins_ = {}
      task.spawn(function()
        for i,v in pairs(game.Workspace:GetChildren()) do
          for j,k in pairs(v:GetChildren()) do
            task.spawn(function()
              if (k.Name == "CoinContainer" or k.Name == "CoinAreas") and k:FindFirstChild("Coin_Server") then
                if k:FindFirstChild("Coin_Server").CoinVisual.Transparency ~= 1 then
                  local target = game.Players[murder]
                  local distance = (k:FindFirstChild("Coin_Server").Position - target.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude
                  if distance > 40 or murder == LocalPlayer.Name then
                    table.insert(coins_, k)
                  end
                end
              end
            end)
          end
        end
      end)
      task.wait(0.2)
      local picked = coins_[math.random(1, #coins_)]
      Cf = picked:FindFirstChild("Coin_Server").CFrame
      LocalPlayer.Character.HumanoidRootPart.CFrame = Cf * CFrame.new(math.random(-4,4),math.random(10,12),math.random(-4,4))
      tweento(Cf)
      task.wait(0.3)
      LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(math.random(100,150), math.random(140,144), math.random(50,80))
      tweento(CFrame.new(math.random(100,150), math.random(140,144), math.random(50,80)))
    end
  end)
end
